-- 게시글 테이블
CREATE TABLE BOARD(
	BOARDNUM INT PRIMARY KEY,
	ID VARCHAR(100),
	CATEGORY VARCHAR(100) NOT NULL,
	TITLE VARCHAR(100) NOT NULL,
	CONTENTS VARCHAR(500) NOT NULL,
	BOARDDATE DATE DEFAULT SYSDATE,
	PRICE INT,
	IMAGE VARCHAR(300),
	PRODUCTNAME VARCHAR(100),
	PRODUCTCATEGORY VARCHAR(100),
	COMPANY VARCHAR(100),
	STATE VARCHAR(100),
	VIEWCOUNT INT
);

-- 회원 테이블
CREATE TABLE MEMBER(
	ID 	VARCHAR(100) PRIMARY KEY,
	PW 	VARCHAR(100) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	NICKNAME VARCHAR(100) UNIQUE NOT NULL,
	BIRTH DATE,
	PH 	VARCHAR(100) UNIQUE,
	PROFILE VARCHAR(500) NOT NULL,
	GRADE VARCHAR(100)
);

-- 댓글 테이블
CREATE TABLE REVIEW(
	REVIEWNUM INT PRIMARY KEY, 
	BOARDNUM INT,
	ID VARCHAR(100),
	REVIEWDATE DATE DEFAULT SYSDATE, 
	REVIEWCONTENTS VARCHAR(500) NOT NULL,
	FOREIGN KEY (BOARDNUM) REFERENCES BOARD(BOARDNUM) ON DELETE CASCADE
); 

-- 추천 테이블
CREATE TABLE RECOMMEND(
	RECOMMENDNUM INT PRIMARY KEY,
	BOARDNUM INT,
	ID VARCHAR(100),
	FOREIGN KEY (BOARDNUM) REFERENCES BOARD(BOARDNUM) ON DELETE CASCADE
); 

CREATE TABLE REPORT(
	REPORTNUM INT PRIMARY KEY,
	ID VARCHAR(100),
	REPORTER VARCHAR(100),
	SUSPECT VARCHAR(100),
	REPORTCONTENTS VARCHAR(500),
	REPORTDATE DATE DEFAULT SYSDATE,
	ACCOUNTSTOP DATE DEFAULT SYSDATE
);
 
 DROP TABLE BOARD;
 DROP TABLE MEMBER;
 DROP TABLE REVIEW;
 DROP TABLE RECOMMEND;
 SELECT * FROM REPORT;
 
 SELECT * FROM BOARD;
 
 SELECT * FROM MEMBER;
 DELETE FROM BOARD;
UPDATE BOARD SET CATEGORY='자유게시판' WHERE BOARDNUM=1;
 SELECT ID,NICKNAME, PH, PROFILE, GRADE, BOARDNUM FROM MEMBER LEFT JOIN BOARD ON MEMBER.ID = BOARD.ID WHERE NICKNAME='오소리오솔오솔';
---------------------------------------------- T E S T ----------------------------------------------
 
 SELECT SORT_DATA.*, MEMBER.NICKNAME, MEMBER.ID FROM (SELECT FILTER_DATA.*, COALESCE(RECOMMEND_COUNT.RECOMMENDCNT, 0) AS RECOMMENDCNT FROM (SELECT BOARDNUM, ID, CATEGORY, TITLE, CONTENTS, TO_CHAR(BOARDDATE, 'YYYY-MM-DD') AS BOARDDATE, PRICE, PRODUCTCATEGORY, COMPANY, STATE, VIEWCOUNT FROM BOARD WHERE 1=1    ORDER BY BOARDNUM ASC) FILTER_DATA LEFT JOIN (SELECT BOARDNUM, COUNT(BOARDNUM) AS RECOMMENDCNT FROM RECOMMEND GROUP BY BOARDNUM) RECOMMEND_COUNT ON FILTER_DATA.BOARDNUM = RECOMMEND_COUNT.BOARDNUM ) SORT_DATA RIGHT JOIN MEMBER ON MEMBER.ID = SORT_DATA.ID WHERE CATEGORY = '리뷰게시판' AND TITLE LIKE '%'||'아'||'%' OR CONTENTS LIKE '%'||'아'||'%';
 -- 게시글 목록 전체 출력
SELECT BOARD.BOARDNUM, BOARD.TITLE, MEMBER.ID, MEMBER.NICKNAME, 
TO_CHAR(BOARD.BOARDDATE, 'YYYY-MM-DD') AS BOARDDATE, RECOMMEND.RECOMMENDNUM, BOARD.VIEWCOUNT, BOARD.STATE, 
CASE WHEN RECOMMEND.RECOMMENDNUM IS NOT NULL THEN COUNT(BOARD.BOARDNUM) ELSE 0 END AS RECOMMENDCNT FROM BOARD 
JOIN MEMBER ON BOARD.ID = MEMBER.ID 
LEFT JOIN RECOMMEND ON BOARD.ID = RECOMMEND.ID AND MEMBER.ID = RECOMMEND.ID 
WHERE CATEGORY = '카메라판매'
GROUP BY BOARD.BOARDNUM, BOARD.TITLE, MEMBER.ID, MEMBER.NICKNAME,
BOARDDATE, RECOMMEND.RECOMMENDNUM, BOARD.VIEWCOUNT, BOARD.STATE 
ORDER BY BOARD.BOARDNUM DESC;
	
-- 게시글 검색 기능 - 제목(TITLE)으로 검색
SELECT BOARD.BOARDNUM, BOARD.TITLE, MEMBER.ID, MEMBER.NICKNAME, 
TO_CHAR(BOARD.BOARDDATE, 'YYYY-MM-DD') AS BOARDDATE, RECOMMEND.RECOMMENDNUM, BOARD.VIEWCOUNT, BOARD.STATE, 
CASE WHEN RECOMMEND.RECOMMENDNUM IS NOT NULL THEN COUNT(BOARD.BOARDNUM) ELSE 0 END AS RECOMMENDCNT FROM BOARD 
JOIN MEMBER ON BOARD.ID = MEMBER.ID 
LEFT JOIN RECOMMEND ON BOARD.ID = RECOMMEND.ID AND MEMBER.ID = RECOMMEND.ID 
WHERE CATEGORY = '카메라판매' AND BOARD.TITLE LIKE '카메라팝니다' 
GROUP BY BOARD.BOARDNUM, BOARD.TITLE, MEMBER.ID, MEMBER.NICKNAME,
BOARDDATE, RECOMMEND.RECOMMENDNUM, BOARD.VIEWCOUNT, BOARD.STATE 
ORDER BY BOARD.BOARDNUM DESC;
 
-- 게시글 검색 기능 - 제조사(COMPANY)로 검색
SELECT BOARD.BOARDNUM, BOARD.TITLE, MEMBER.ID, MEMBER.NICKNAME, 
TO_CHAR(BOARD.BOARDDATE, 'YYYY-MM-DD') AS BOARDDATE, RECOMMEND.RECOMMENDNUM, BOARD.VIEWCOUNT, BOARD.STATE, 
CASE WHEN RECOMMEND.RECOMMENDNUM IS NOT NULL THEN COUNT(BOARD.BOARDNUM) ELSE 0 END AS RECOMMENDCNT FROM BOARD 
JOIN MEMBER ON BOARD.ID = MEMBER.ID 
LEFT JOIN RECOMMEND ON BOARD.ID = RECOMMEND.ID AND MEMBER.ID = RECOMMEND.ID 
WHERE CATEGORY = '카메라판매' AND BOARD.COMPANY LIKE '소니' 
GROUP BY BOARD.BOARDNUM, BOARD.TITLE, MEMBER.ID, MEMBER.NICKNAME,
BOARDDATE, RECOMMEND.RECOMMENDNUM, BOARD.VIEWCOUNT, BOARD.STATE 
ORDER BY BOARD.BOARDNUM DESC;



	INSERT INTO BOARD(BOARDNUM,ID,CATEGORY,TITLE,CONTENTS,PRICE,COMPANY,PRODUCTCATEGORY,STATE)
	VALUES((SELECT NVL(MAX(BOARDNUM),0)+1 FROM BOARD),'a@a.c','판매게시판','소니미러리스판매중8000','카메라가좋아요',8000,'소니','미러리스','판매중');
	INSERT INTO BOARD(BOARDNUM,ID,CATEGORY,TITLE,CONTENTS,PRICE,COMPANY,PRODUCTCATEGORY,STATE)
	VALUES((SELECT NVL(MAX(BOARDNUM),0)+1 FROM BOARD),'b@b.c','리뷰게시판','dslr','카메라가좋아요',9000,'소니','dslr','판매중');
	
	INSERT INTO RECOMMEND(RECOMMENDNUM, BOARDNUM, ID) VALUES((SELECT NVL(MAX(RECOMMENDNUM),0)+1 FROM RECOMMEND),1,'a@a.c');
	INSERT INTO RECOMMEND(RECOMMENDNUM, BOARDNUM, ID) VALUES((SELECT NVL(MAX(RECOMMENDNUM),0)+1 FROM RECOMMEND),2,'a@a.c');
	INSERT INTO RECOMMEND(RECOMMENDNUM, BOARDNUM, ID) VALUES((SELECT NVL(MAX(RECOMMENDNUM),0)+1 FROM RECOMMEND),3,'a@a.c');
	INSERT INTO RECOMMEND(RECOMMENDNUM, BOARDNUM, ID) VALUES((SELECT NVL(MAX(RECOMMENDNUM),0)+1 FROM RECOMMEND),4,'a@a.c');
	INSERT INTO RECOMMEND(RECOMMENDNUM, BOARDNUM, ID) VALUES((SELECT NVL(MAX(RECOMMENDNUM),0)+1 FROM RECOMMEND),5,'a@a.c');
	INSERT INTO RECOMMEND(RECOMMENDNUM, BOARDNUM, ID) VALUES((SELECT NVL(MAX(RECOMMENDNUM),0)+1 FROM RECOMMEND),1,'b@b.c');
	INSERT INTO RECOMMEND(RECOMMENDNUM, BOARDNUM, ID) VALUES((SELECT NVL(MAX(RECOMMENDNUM),0)+1 FROM RECOMMEND),2,'b@b.c');
	INSERT INTO RECOMMEND(RECOMMENDNUM, BOARDNUM, ID) VALUES((SELECT NVL(MAX(RECOMMENDNUM),0)+1 FROM RECOMMEND),3,'b@b.c');
 